$break-point-md: map-get($breakpoints, md);
$break-point-lg: map-get($breakpoints, lg);

@mixin l-sm {
  @media all and (max-width: $break-point-md - 1px) {
    @content;
  }
}
@mixin l-md {
  @media all and (max-width: $break-point-lg - 1px) and (min-width: $break-point-md) {
    @content;
  }
}
@mixin l-lg {
  @media all and (min-width: $break-point-lg) {
    @content;
  }
}

@mixin generate-utility-body($class, $infix, $modifier, $property, $value) {
  .#{$class + $infix + '-' + $modifier} {
    @if type-of($property) == 'list' {
      @each $item in $property {
        #{$item}: #{$value};
      }
    }
    @else {
      #{$property}: #{$value};
    }
  }
}

@mixin generate-utility($utilities, $infix) {
  @each $key, $props in $utilities {
    $values: map-get($props, values);
    $class: map-get($props, class);
    $property: map-get($props, property);
  
    @if type-of($values) == 'map' {
      @each $modifier, $value in $values {
        @include generate-utility-body($class, $infix, $modifier, $property, $value);
      }
    }
    @else if type-of($values) == 'list' {
      @each $value in $values {
        @include generate-utility-body($class, $infix, $value, $property, $value);
      }
    }
  }
}
